---
# tasks file for letsencrypt-request

- name: check if we already have a certificate
  stat:
    path: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
  register: letsencrypt_cert

- name: get an SSL certificate for {{ domain }} from Let's Encrypt
  command: "certbot certonly --standalone --preferred-challenges http-01 -d {{ domain }} --register-unsafely-without-email --agree-tos -n"
  args:
    creates: "/etc/letsencrypt/live/{{ domain }}/privkey.pem"
  when:
    - letsencrypt_cert.stat.exists == False
    - testing is undefined

- name: configure Let's Encrypt. delete extra line
  lineinfile:
    path: "/etc/letsencrypt/renewal/{{ domain }}.conf"
    regexp: '^pref_challs'
    state: absent
  when:
    - testing is undefined

- name: configure Let's Encrypt. change auto renewal method
  lineinfile:
    path: "/etc/letsencrypt/renewal/{{ domain }}.conf"
    regexp: '^authenticator'
    line: 'authenticator = webroot'
    state: present
  when:
    - testing is undefined

- name: configure Let's Encrypt. configure autorenewal
  blockinfile:
    path: "/etc/letsencrypt/renewal/{{ domain }}.conf"
    insertafter: EOF
    block: "{{ letsencrypt_webroot_conf }}"
    state: present
  when:
    - testing is undefined

# Alternative if we are testing (as we can't get Let's Encrypt certificates)

- name: create live directory for testing keys
  file:
    dest: /etc/letsencrypt/live/{{ domain }}
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - testing is defined
    - letsencrypt_cert.stat.exists == False

- name: install openssl
  apt:
    pkg: openssl
    state: present
  when:
    - testing is defined
    - letsencrypt_cert.stat.exists == False

- name: create self-signed certificate, if testing
  command: >
    openssl req -x509 -nodes -subj '/CN={{ domain }}' -days 30
    -newkey rsa:4096 -sha256 -keyout /etc/letsencrypt/live/{{ domain }}/privkey.pem
    -out /etc/letsencrypt/live/{{ domain }}/cert.pem
  args:
    creates: /etc/letsencrypt/live/{{ domain }}/cert.pem
  ignore_errors: yes
  when:
    - testing is defined
    - letsencrypt_cert.stat.exists == False

- name: create a combined SSL cert for testing
  shell: cat /etc/letsencrypt/live/{{ domain }}/cert.pem >
    /etc/letsencrypt/live/{{ domain }}/fullchain.pem
  when:
    - testing is defined
    - letsencrypt_cert.stat.exists == False

- name: Set permissions on combined SSL public cert
  file:
    name: "{{ item }}"
    mode: 0644
  with_items:
    - "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
    - "/etc/letsencrypt/live/{{ domain }}/cert.pem"
    - "/etc/letsencrypt/live/{{ domain }}/privkey.pem"
  when:
    - testing is defined
